# Generated by Django 5.2.7 on 2025-10-09 06:13

import django.db.models.deletion
import django.db.models.functions.datetime
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Tag",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(help_text="Пример: Новости, ПДД", unique=True, verbose_name="Название")),
                (
                    "slug",
                    models.SlugField(help_text="Автозаполняется. Используется в URL", unique=True, verbose_name="Slug"),
                ),
            ],
            options={
                "verbose_name": "Тег",
                "verbose_name_plural": "Теги",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "type",
                    models.CharField(
                        choices=[("article", "Статья"), ("video", "Видео")],
                        default="article",
                        help_text="Для совместимости с API v2",
                        verbose_name="Тип категории",
                    ),
                ),
                ("name", models.CharField(help_text="Пример: Новости, Технологии", verbose_name="Название")),
                (
                    "slug",
                    models.SlugField(
                        help_text="Автозаполняется. Используется в URL.", unique=True, verbose_name="Slug"
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        help_text="Оставьте пустым для корневой категории",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="news.category",
                        verbose_name="Родительская категория",
                    ),
                ),
            ],
            options={
                "verbose_name": "Категория",
                "verbose_name_plural": "Категории",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Video",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "status",
                    models.CharField(
                        choices=[("draft", "Черновик"), ("published", "Опубликован")],
                        default="draft",
                        verbose_name="Статус",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        db_default=django.db.models.functions.datetime.Now(),
                        default=django.utils.timezone.now,
                        verbose_name="Дата создания",
                    ),
                ),
                ("published_at", models.DateTimeField(blank=True, null=True, verbose_name="Дата публикации")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Обновлено")),
                ("views", models.PositiveIntegerField(default=0, verbose_name="Просмотры")),
                ("youtube_url", models.URLField(blank=True, verbose_name="YouTube ссылка")),
                ("rutube_url", models.URLField(blank=True, verbose_name="Rutube ссылка")),
                ("vkvideo_url", models.URLField(blank=True, verbose_name="VK Видео ссылка")),
                ("title", models.CharField(blank=True, help_text="Автозаполняется.", verbose_name="Название")),
                ("title_picture", models.URLField(blank=True, null=True, verbose_name="Обложка")),
                ("lead", models.TextField(blank=True, help_text="Автозаполняется.", verbose_name="Лид/описание")),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name="Автор"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="news.category",
                        verbose_name="Категория",
                    ),
                ),
                ("tags", models.ManyToManyField(blank=True, to="news.tag", verbose_name="Теги")),
            ],
            options={
                "verbose_name": "Видео",
                "verbose_name_plural": "Видео",
            },
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("title", models.CharField(help_text="Краткий заголовок, до 200 символов", verbose_name="Заголовок")),
                (
                    "status",
                    models.CharField(
                        choices=[("draft", "Черновик"), ("published", "Опубликован")],
                        default="draft",
                        verbose_name="Статус",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        db_default=django.db.models.functions.datetime.Now(),
                        default=django.utils.timezone.now,
                        verbose_name="Дата создания",
                    ),
                ),
                ("published_at", models.DateTimeField(blank=True, null=True, verbose_name="Дата публикации")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Обновлено")),
                ("title_picture", models.URLField(blank=True, null=True, verbose_name="Ссылка на обложку")),
                ("views", models.PositiveIntegerField(default=0, verbose_name="Просмотры")),
                ("body", models.TextField(blank=True, verbose_name="Текст статьи")),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False, help_text="Отметить для особого отображения в ленте", verbose_name="Избранный"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(help_text="Автозаполняется. Используется в URL", unique=True, verbose_name="Slug"),
                ),
                ("lead", models.TextField(blank=True, help_text="Описание поста", verbose_name="Лид/описание")),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name="Автор"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="news.category",
                        verbose_name="Категория",
                    ),
                ),
                ("tags", models.ManyToManyField(blank=True, to="news.tag", verbose_name="Теги")),
            ],
            options={
                "verbose_name": "Cтатья",
                "verbose_name_plural": "Cтатьи",
                "indexes": [models.Index(fields=["is_featured", "status"], name="news_post_is_feat_93699e_idx")],
            },
        ),
        migrations.CreateModel(
            name="ContentItem",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "title",
                    models.CharField(
                        help_text="Может автозаполняться из метаданных видео (YouTube/RuTube) если поле пустое",
                        verbose_name="Название",
                    ),
                ),
                (
                    "lead",
                    models.TextField(
                        blank=True,
                        help_text="Короткое описание. Автозаполняется из описания видео, только для видео и только если пусто",
                        verbose_name="Лид/описание",
                    ),
                ),
                (
                    "title_picture",
                    models.CharField(
                        blank=True,
                        help_text="Код в S3 или полный URL внешней обложки. Может быть автозаполнена из метаданных видео, только для видео",
                        null=True,
                        verbose_name="Обложка",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("D", "Черновик"), ("P", "Опубликован")], default="D", verbose_name="Статус"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        db_default=django.db.models.functions.datetime.Now(),
                        default=django.utils.timezone.now,
                        verbose_name="Дата создания",
                    ),
                ),
                (
                    "scheduled_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Дата и время, когда контент должен быть опубликован",
                        null=True,
                        verbose_name="Запланированная дата публикации",
                    ),
                ),
                (
                    "published_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="Заполняется автоматически при публикации",
                        null=True,
                        verbose_name="Дата публикации",
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="Обновлено")),
                ("views", models.PositiveIntegerField(default=0, verbose_name="Просмотры")),
                (
                    "content_type",
                    models.CharField(
                        choices=[("V", "Видео"), ("A", "Статья")], default="A", verbose_name="Тип контента"
                    ),
                ),
                ("body", models.TextField(blank=True, help_text="В формате Markdown", verbose_name="Текст статьи")),
                (
                    "is_featured",
                    models.BooleanField(
                        default=False, help_text="Отметить для особого отображения в ленте", verbose_name="Избранный"
                    ),
                ),
                ("slug", models.SlugField(unique=True, verbose_name="Slug")),
                ("youtube_id", models.CharField(blank=True, verbose_name="ID YouTube видео")),
                ("rutube_id", models.CharField(blank=True, verbose_name="ID Rutube видео")),
                ("vkvideo_id", models.CharField(blank=True, verbose_name="ID VK Видео")),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name="Автор"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="news.category",
                        verbose_name="Категория",
                    ),
                ),
                ("tags", models.ManyToManyField(blank=True, to="news.tag", verbose_name="Теги")),
            ],
            options={
                "verbose_name": "Элемент контента",
                "verbose_name_plural": "Элементы контента",
                "ordering": ["-published_at", "-updated_at"],
                "indexes": [
                    models.Index(fields=["published_at"], name="news_conten_publish_b8a10e_idx"),
                    models.Index(fields=["status", "-published_at"], name="news_conten_status_cd7592_idx"),
                    models.Index(fields=["category", "-published_at"], name="news_conten_categor_f3eac5_idx"),
                ],
            },
        ),
    ]
